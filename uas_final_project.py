# -*- coding: utf-8 -*-
"""UAS - Final Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t6tnqi9l_pdgspq-X-ztVQ2hM-_9BEvI

# ** UAS - Final Project**
Nama : Yusuf Dwi Kurniawan

Student ID: 23502210019
"""
import pandas as pd
import seaborn as sns
import streamlit as st
import matplotlib.pyplot as plt

st.write('Nama  : Yusuf Dwi Kurniawan')
st.write('NIM   : 23502210019')

"""# **Gathering Data**"""

pokemon_data_df = pd.read_csv("pokemon_data.csv")
pokemon_data_df.head()

"""Assessing Data"""

pokemon_data_df.info()
pokemon_data_df.isna().sum()

print("Jumlah duplikasi: ", pokemon_data_df.duplicated().sum())
pokemon_data_df.describe()

"""Cleaning Data"""

pokemon_data_df[pokemon_data_df.Name.isna()]

pokemon_data_df.fillna(value="Type 2", inplace=True)

pokemon_data_df.isna().sum()

"""================================================================================================================="""

# **Exploratory Data Analysis**

st.write('### #List of question')
st.markdown('''
            1. Bagaimana distribusi statistik total (HP + Attack + Defense + Sp. Atk + Sp. Def + Speed) untuk Pokemon Legendary dan non-Legendary?
            2. Bagaimana perbandingan total statistik Pokemon (HP + Attack + Defense + Sp. Atk + Sp. Def + Speed) antara Generasi pertama dan terakhir?
            3. Bagaimana distribusi jenis Pokemon (Type 1) dalam dataset?
            4. Apakah banyak Pokemon yang memiliki Type 2? Bagaimana distribusinya?
            5. Visualisasikan boxplot untuk masing-masing statistik Pokemon (HP, Attack, Defense, Sp. Atk, Sp. Def, Speed) untuk melihat distribusi dan outliers.
            6. Apakah ada perbedaan rata-rata HP antara berbagai jenis Pokemon (Type 1)?
''')

pokemon_data_df.describe(include="all")

# **Visualisasi Data**

"""1. Bagaimana distribusi statistik total (HP + Attack + Defense + Sp. Atk + Sp. Def + Speed) untuk Pokemon Legendary dan non-Legendary?
"""

pokemon_data_df['Total_Stats'] = pokemon_data_df['HP'] + pokemon_data_df['Attack'] + pokemon_data_df['Defense'] + \
                            pokemon_data_df['Sp. Atk'] + pokemon_data_df['Sp. Def'] + pokemon_data_df['Speed']

plt.figure(figsize=(12, 8))
sns.histplot(data=pokemon_data_df, x='Total_Stats', hue='Legendary', bins=30, kde=True, alpha=0.7)
plt.title('Distribusi Total Statistik Pokemon untuk Legendary dan non-Legendary')
plt.xlabel('Total Stats')
plt.ylabel('Frekuensi')
plt.legend(title='Legendary', labels=['non-Legendary', 'Legendary'])
plt.show()

"""2. Bagaimana perbandingan total statistik Pokemon (HP + Attack + Defense + Sp. Atk + Sp. Def + Speed) antara Generasi pertama dan terakhir?

"""

pokemon_data_df['Total_Stats'] = pokemon_data_df['HP'] + pokemon_data_df['Attack'] + pokemon_data_df['Defense'] + \
                            pokemon_data_df['Sp. Atk'] + pokemon_data_df['Sp. Def'] + pokemon_data_df['Speed']

generation_comparison_df = pokemon_data_df.groupby('Generation')['Total_Stats'].mean().reset_index()

plt.figure(figsize=(10, 6))
sns.barplot(x='Generation', y='Total_Stats', data=generation_comparison_df, palette='viridis')
plt.title('Perbandingan Total Statistik Pokemon antara Generasi Pertama dan Terakhir')
plt.xlabel('Generasi')
plt.ylabel('Rata-rata Total Statistik')
plt.show()

"""3. Bagaimana distribusi jenis Pokemon (Type 1) dalam dataset?"""

plt.figure(figsize=(12, 6))
sns.countplot(x='Type 1', data=pokemon_data_df, order=pokemon_data_df['Type 1'].value_counts().index, palette='viridis')
plt.xticks(rotation=45, ha='right')
plt.title('Distribusi Jenis Pokemon (Type 1)')
plt.xlabel('Type 1')
plt.ylabel('Jumlah Pokemon')
plt.show()

"""4. Apakah banyak Pokemon yang memiliki Type 2? Bagaimana distribusinya?

"""

type2_count = pokemon_data_df["Type 2"].value_counts()

plt.figure(figsize=(12, 6))
sns.countplot(data=pokemon_data_df, x="Type 2", order=type2_count.index, palette="viridis")
plt.xticks(rotation=45, ha="right")
plt.title("Distribusi Pokemon Berdasarkan Type 2")
plt.xlabel("Type 2")
plt.ylabel("Jumlah Pokemon")
plt.show()

"""5. Visualisasikan boxplot untuk masing-masing statistik Pokemon (HP, Attack, Defense, Sp. Atk, Sp. Def, Speed) untuk melihat distribusi dan outliers."""

selected_stats = ["HP", "Attack", "Defense", "Sp. Atk", "Sp. Def", "Speed"]

plt.figure(figsize=(12, 8))
sns.boxplot(data=pokemon_data_df[selected_stats])
plt.title("Boxplot untuk Statistik Pokemon", fontsize=16)
plt.xlabel("Statistik Pokemon", fontsize=14)
plt.ylabel("Nilai", fontsize=14)
plt.show()

"""6. Apakah ada perbedaan rata-rata HP antara berbagai jenis Pokemon (Type 1)?"""

plt.figure(figsize=(12, 6))
sns.boxplot(x="Type 1", y="HP", data=pokemon_data_df, palette="viridis")
plt.title('Perbedaan Rata-rata HP antara Berbagai Jenis Pokemon (Type 1)')
plt.xticks(rotation=45, ha='right')
plt.show()

"""# **Membuat Dashboard Sederhana dengan Streamlit**

Menyiapkan DataFrame
"""

st.sidebar.header('Filter Options')

# Filter by Type 1
selected_type1 = st.sidebar.selectbox('Select Type 1:', pokemon_data_df['Type 1'].unique())

# Filter by Type 2
selected_type2 = st.sidebar.selectbox('Select Type 2:', ['All'] + list(pokemon_data_df['Type 2'].unique()))

# Apply filters
filtered_df = pokemon_data_df[(pokemon_data_df['Type 1'] == selected_type1) &
                        ((selected_type2 == 'All') | (pokemon_data_df['Type 2'] == selected_type2))]

# Display the filtered DataFrame
st.write("Filtered Pokemon Data:")
st.write(filtered_df)

all_df = pd.read_csv("pokemon_data.csv")

st.header('Collection Dashboard :sparkles:')

with st.sidebar:
    st.markdown("![Logo Pokemon](https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1280px-International_Pok%C3%A9mon_logo.svg.png)")

def prepare_data_for_visualization(pokemon_data_df):

    prepared_df = pokemon_data_df.copy()
    prepared_df['Total'] = pokemon_data_df['HP'] + pokemon_data_df['Attack'] + pokemon_data_df['Defense']
    prepared_df['Type 2'].fillna('None', inplace=True)
    return prepared_df

def create_visualization_dataframes(pokemon_data_df):
    # Misalnya, membuat DataFrame untuk histogram HP dan Attack
    histogram_data = pokemon_data_df[['HP', 'Attack']]
    type1_distribution = pokemon_data_df['Type 1'].value_counts().reset_index()
    type1_distribution.columns = ['Type 1', 'Count']

    return histogram_data, type1_distribution

# Load prepared data for visualization
prepared_df = prepare_data_for_visualization(pokemon_data_df)
histogram_data, type1_distribution = create_visualization_dataframes(pokemon_data_df)

# Streamlit app
st.title('Pokemon Data Dashboard :zap:')

# Visualisasi Data
st.header('Histogram HP and Attack')
st.bar_chart(histogram_data)

st.header('Type 1 Distribution')
st.pie_chart(type1_distribution.set_index('Type 1'))

st.header('Scatter Plot HP vs. Attack')
sns.scatterplot(x='HP', y='Attack', data=prepared_df)
st.pyplot()

# Tambahkan visualisasi data lainnya sesuai kebutuhan Anda

# Display the raw data
st.header('Raw Data')
st.write(prepared_df)
